■■■ Spring MVC ■■■
 1. 웹 개발을 위한 MVC 패턴이 적용된 Spring Framework.
     Spring 에서는 DispatcherServlet 이 컨트롤러 역할을 수행하게 된다.

 2. Spring MVC 의 주요 구성 요소
 - DispatcherServlet 
 	: 클라이언트의 요청을 전달받는다.
 	Controller(사용자 정의 컨트롤러)에게 클라이언트의 요청을 전달하고,
 	Controller 가 반환한 결과값은 View 에 전달하여
 	적절한 응답을 생성할 수 있도록 처리한다.
 
  - HandlerMapping 
    : 클라이언트의 요청을 URL을 어떤 Controller 가 처리할 지 결정한다.
  - controller
    : 사용자 정의 Controller 액션처리. 우리가 작성.
  - ModleAndView 
    : View 객체 정보와 결과값이 들어있는 객체.
  - ViewResolver 
    : 요청에 대한 처리 결과를 보여줄 View 를 결정한다.
  - View
    : 요청에 대한 처리 결과룰 보여줄 응답(결과 출력)을 생성한다. 우리가 작성
  - web.xml
    : DispatcherServlet 서블릿 객체 등록. 우리가 작성
  - dispatcher-servlet.xml
    : Controller 객체 등록. 우리가 작성
 
 3. Spring MVC 실행흐름
 
 - 사용자의 요청 발생 → DispatcherServlet 접수
 - DispatcherServlet  → HandlerMapping 에 주소 분석을 요청
 - DispatcherServlet  → 특정 Controller 객체 호출 및 결과 수신
						 결과는 ModelAndView 객체.
 - DispatcherServlet  → ViewResolver 에 View 객체 분석을 요청.
 - DispatcherServlet  → 특정 View 객체에 Model 객체를 넘겨주고
						 처리된 결과 출력.
	※ ModelAndView 객체
	: View 객체 정보와 결과값이 들어있는 객체
						
						
4. Spring MVC 에서 우리가 해야할 일
  - Controller 
    액션 처리를 담당하는 Controller 클래스 설계.
    Annotation 을 사용하거나 Controller 인터페이스를 구현하여 작성.
  
  - View
    결과 출력을 위한 JSP 페이지 작성
  
  - web.xml
    서블릿 주소와 DispatcherServlet 클래스 등록.
  
  - dispatcher-servlet.xml
    우리가 작성한 Controller 객체 등록
    URL 매핑 주소 등록.
    
------------------------------------------------------------------
 ■■■ Spring MVC 프로젝트 관련 실습 ■■■
 
 
 
 
 